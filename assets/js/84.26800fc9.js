(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{298:function(t,r,e){"use strict";e.r(r);var n=e(2),s=Object(n.a)({},function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"sp-3-sic의-주요-instruction-sets"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sp-3-sic의-주요-instruction-sets","aria-hidden":"true"}},[t._v("#")]),t._v(" [SP-3] SIC의 주요 Instruction Sets")]),t._v(" "),e("p",[t._v("이 글은 SIC 의 주요 Instruction Sets을 설명하는 글입니다. 모든 Instruction 을 설명하지는 못하기때문에 이 "),e("a",{attrs:{href:"%5Bhttp://solomon.ipv6.club.tw/Course/SP.941/sic-instruction.html%5D(http://solomon.ipv6.club.tw/Course/SP.941/sic-instruction.html)"}},[t._v("링크")]),t._v("를 참고하길 바랍니다")]),t._v(" "),e("h2",{attrs:{id:"instruction-sets-sic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instruction-sets-sic","aria-hidden":"true"}},[t._v("#")]),t._v(" Instruction Sets (SIC)")]),t._v(" "),e("p",[t._v("SIC 는 아래와 같은 Instruction Sets 을 갖는다. 또한 다른 특성들과 마찬가지로 SIC/XE 에도 상위 호환이 됩니다.")]),t._v(" "),e("ul",[e("li",[t._v("Instruction Sets\n"),e("ul",[e("li",[t._v("Data Movement(load 와 store): LDA, LDX, STA, STX, ...")]),t._v(" "),e("li",[t._v("Arithmetic: ADD, SUB, MUL, DIV, ...")]),t._v(" "),e("li",[t._v("비교(Comparison): COMP, ...")]),t._v(" "),e("li",[t._v("Conditional Jump: JEQ, JLT, JGT, ...")]),t._v(" "),e("li",[t._v("Jump to Subroutine: JSUB")]),t._v(" "),e("li",[t._v("Return from Subroutine: RSUB")]),t._v(" "),e("li",[t._v("RESW, RESB, WORD, BYTE, ...")])])])]),t._v(" "),e("h3",{attrs:{id:"sic-코드-예시"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sic-코드-예시","aria-hidden":"true"}},[t._v("#")]),t._v(" SIC 코드 예시")]),t._v(" "),e("pre",[e("code",[t._v("COPY   START  0\nFIRST  STL    RETADR\n       LDB    #LENGTH\n       BASE   LENGTH\nCLOOP  +JSUB  RDREC\n       LDA    LENGTH\nHELLO RESW 1\n")])]),t._v(" "),e("h3",{attrs:{id:"data-movement-load-store"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-movement-load-store","aria-hidden":"true"}},[t._v("#")]),t._v(" Data Movement (load , store)")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("load : memory ⇒ register 명령, 즉 메모리 안의 값을 읽어서 레지스터 안에 넣는 명령")]),t._v(" "),e("pre",[e("code",[t._v("  LDA FIVE \n\n  . 위 명령은 (메모리에 저장된)FIVE 라는 데이터 변수의 값을 읽어서 A 레지스터로 넣는 명령입니다\n  . [FIVE] => A (부등호 기호 아님) \n  . 마찬가지로 LDX FIVE 라면 [FIVE] => X\n  . (FIVE 는 사용자가 정의해놓은 데이터 변수)\n")])])]),t._v(" "),e("li",[e("p",[t._v("store : register ⇒ memory 명령, 즉 레지스터 안의 값을 읽어서 메모리 안에 넣는 명령")]),t._v(" "),e("pre",[e("code",[t._v("  STA HELLO\n\n  . A 레지스터 안의 값을 HELLO 라는 데이터 변수안에 넣는 명령입니다.\n  . [HELLO] => A\n  . 마찬가지로 STX HELLO 라면 [HELLO] => X\n")])])])]),t._v(" "),e("h3",{attrs:{id:"arithmetic"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arithmetic","aria-hidden":"true"}},[t._v("#")]),t._v(" Arithmetic")]),t._v(" "),e("pre",[e("code",[t._v("\tADD HELLO\n\t. [A] + [HELLO] => A\n\n\tSUB HELLO\n\t. [A] - [HELLO] => A\n\n\tMUL HELLO\n\t. [A] * [HELLO] => A \n\n\tDIV\n\t. [A] / [HELLO] => A\n")])]),t._v(" "),e("h3",{attrs:{id:"comparison"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#comparison","aria-hidden":"true"}},[t._v("#")]),t._v(" Comparison")]),t._v(" "),e("pre",[e("code",[t._v("\tCOMP HELLO\n\t. [A] : [HELLO] => SW\n\t. A 레지스터의 값과 HELLO의 값을 비교하여 SW 레지스터에 저장\n")])]),t._v(" "),e("h3",{attrs:{id:"jsub"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsub","aria-hidden":"true"}},[t._v("#")]),t._v(" JSUB")]),t._v(" "),e("pre",[e("code",[t._v("\tJSUB MYFUNC\n\n\t. 코드를 실행하면 내부적으로 아래와 같이 작동합니다\n\t. 1. [PC] => L  (돌아올 위치를 백업하기위한 작업)\n\t. 2. MYFUNC => PC (MYFUNC 라는 서브루틴을 호출하는 작업)\n")])]),t._v(" "),e("h3",{attrs:{id:"rsub"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rsub","aria-hidden":"true"}},[t._v("#")]),t._v(" RSUB")]),t._v(" "),e("pre",[e("code",[t._v("..서부루틴 내부..\n\tRSUB\n\n. [L] => PC\n. JSUB 에서 백업해뒀던 주소가 L에 있기때문에, 이를 이용하여 돌아가는 명령이라고 보면 됩니다. \n")])]),t._v(" "),e("h3",{attrs:{id:"resw-resb"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#resw-resb","aria-hidden":"true"}},[t._v("#")]),t._v(" RESW, RESB")]),t._v(" "),e("p",[t._v("변수 선언,정의를 위한 명령")]),t._v(" "),e("p",[t._v("RESW는 Reserve(예약하다) Word(Word 크기)라는 뜻의 명령이다. 즉 WORD 사이즈를 예약하여 변수를 선언하게 할수있다.")]),t._v(" "),e("pre",[e("code",[t._v("HELLO RESW 1\n. 1 WORD 만큼을 HELLO에 예약한다. \n\nCAR RESB 2\n. 2 BYTE 만큼을 CAR에 예약한다.  \n")])]),t._v(" "),e("h3",{attrs:{id:"word-byte"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#word-byte","aria-hidden":"true"}},[t._v("#")]),t._v(" WORD, BYTE")]),t._v(" "),e("p",[t._v("상수 선언, 정의를 위한 명령")]),t._v(" "),e("pre",[e("code",[t._v("FIVE WORD 5\n. FIVE 는 5를 값으로 갖는 상수로 지정된다\n\nCHARZ   BYTE    C'Z'\n. CHARZ 는 Z 를 값으로 갖는 상수로 지정된다")])])])},[],!1,null,null,null);r.default=s.exports}}]);