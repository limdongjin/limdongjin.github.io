(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{435:function(t,e,r){"use strict";r.r(e);var s=r(21),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"sp-2-sic의-구조-memory-reg-data-format"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#sp-2-sic의-구조-memory-reg-data-format"}},[t._v("#")]),t._v(" [SP-2] SIC의 구조 (memory, reg, data format, ..)")]),t._v(" "),r("h2",{attrs:{id:"memory-sic"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#memory-sic"}},[t._v("#")]),t._v(" Memory (SIC)")]),t._v(" "),r("ul",[r("li",[t._v("1 byte  : 8 bits")]),t._v(" "),r("li",[t._v("1 word : 3 bytes = 24 bits")]),t._v(" "),r("li",[t._v("All addresses are byte addresses")]),t._v(" "),r("li",[t._v("메모리는 총 2의 15승 byte")])]),t._v(" "),r("h2",{attrs:{id:"registers-sic"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#registers-sic"}},[t._v("#")]),t._v(" Registers (SIC)")]),t._v(" "),r("p",[t._v("SIC 는 special purpose 레지스터를 5개 갖고 있으며, 각각 1 word (24 bits) 이다.")]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",{staticStyle:{"text-align":"center"}},[t._v("Mnemonic")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("Number")]),t._v(" "),r("th",{staticStyle:{"text-align":"center"}},[t._v("목적")])])]),t._v(" "),r("tbody",[r("tr",[r("td",{staticStyle:{"text-align":"center"}},[t._v("A")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("0")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Accumulator : 산술 연산에 활용")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"center"}},[t._v("X")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("1")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Index register : Addressing 할때 사용, 주소 저장 및 계산")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"center"}},[t._v("L")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("2")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Linkage register: JSUB (Jump to Subroutine)할때 return address가 이 레지스터에 저장됨")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"center"}},[t._v("PC")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("8")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Program Counter")])]),t._v(" "),r("tr",[r("td",{staticStyle:{"text-align":"center"}},[t._v("SW")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("9")]),t._v(" "),r("td",{staticStyle:{"text-align":"center"}},[t._v("Status Word")])])])]),t._v(" "),r("h2",{attrs:{id:"data-format-sic"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#data-format-sic"}},[t._v("#")]),t._v(" Data Format (SIC)")]),t._v(" "),r("p",[t._v("SIC 에서는 두가지의 데이터 포맷을 지원한다. floating-point number는 SIC에서는 지원하지 않고, SIC/XE 에서 지원합니다")]),t._v(" "),r("ul",[r("li",[t._v("Integer : 24 bits binary numbers")]),t._v(" "),r("li",[t._v("Character : 8 bits ASCII code")])]),t._v(" "),r("h2",{attrs:{id:"instruction-format-addressing-sic"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#instruction-format-addressing-sic"}},[t._v("#")]),t._v(" Instruction Format , Addressing (SIC)")]),t._v(" "),r("ul",[r("li",[t._v("SIC 의 Instruction Format 길이는 1 word(24 bits) 입니다.")]),t._v(" "),r("li",[t._v("( SIC/XE 에서는 Instruction Format이 몇가지 추가됩니다 )")])]),t._v(" "),r("p",[r("img",{attrs:{src:"/images/sic-instruction-format.png",alt:""}})]),t._v(" "),r("ul",[r("li",[r("p",[t._v("Instruction Format")]),t._v(" "),r("ul",[r("li",[t._v("OP Code : 8 bits")]),t._v(" "),r("li",[t._v("X : 1 bit 를 차지한다. Addressing Mode 를 결정함.")]),t._v(" "),r("li",[t._v("Address : 15 bits")])])]),t._v(" "),r("li",[r("p",[t._v("Addressing")]),t._v(" "),r("ul",[r("li",[t._v("Direct Addressing: if X == 0, Target Address(TA) = Address")]),t._v(" "),r("li",[t._v("Index Addressing: if X == 1, TA = Address + [X]")]),t._v(" "),r("li",[t._v("(* [X]는 X 레지스터 안의 값을 나타냅니다)")])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);