(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{496:function(s,a,n){"use strict";n.r(a);var t=n(24),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"boj-17609-회문-python"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#boj-17609-회문-python"}},[s._v("#")]),s._v(" [BOJ] 17609 회문 - python")]),s._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://www.acmicpc.net/problem/17609",target:"_blank",rel:"noopener noreferrer"}},[s._v("문제 링크"),n("OutboundLink")],1)])]),s._v(" "),n("p",[s._v("분할정복 + 재귀")]),s._v(" "),n("h2",{attrs:{id:"문제-요약"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#문제-요약"}},[s._v("#")]),s._v(" 문제 요약")]),s._v(" "),n("p",[s._v("입력으로 문자열 S 가 주어질때,")]),s._v(" "),n("p",[s._v("회문(palindrome)인지 유사회문인지 둘다 아닌지를 구해라.")]),s._v(" "),n("h2",{attrs:{id:"풀이의-큰흐름"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#풀이의-큰흐름"}},[s._v("#")]),s._v(" 풀이의 큰흐름")]),s._v(" "),n("ol",[n("li",[s._v("일단 S 가 회문인지 검사한다. 만약 회문이 맞다면 0 을 출력한다.\n"),n("ul",[n("li",[s._v("is_palindrome(s)")])])]),s._v(" "),n("li",[s._v("S 가 유사 회문인지 검사한다. 유사 회문이 맞다면 1을 출력한다.\n"),n("ul",[n("li",[s._v("is_psudo_pal(s)")])])]),s._v(" "),n("li",[s._v("회문도 아니고 유사회문도 아니므로 2를 출력한다.")])]),s._v(" "),n("h2",{attrs:{id:"_1-회문인지-검사하는-로직"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1-회문인지-검사하는-로직"}},[s._v("#")]),s._v(" 1. 회문인지 검사하는 로직")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("로직\n"),n("br")]),s._v(" "),n("p",[s._v("S의 0번째 문자가 마지막 문자와 같지않다면 False 리턴")]),s._v(" "),n("p",[s._v("S의 1번째 문자가 끝에서 두번째 문자와 같지않다면 False 리턴")]),s._v(" "),n("p",[s._v("...")]),s._v(" "),n("p",[s._v("만약 "),n("strong",[s._v("S[i] != S[len(s) - 1 - i]")]),s._v(" 이라면 -> False 리턴")]),s._v(" "),n("p",[s._v("...")]),s._v(" "),n("p",[s._v("( i= len(s)//2) 까지 )")])])]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("is_palindrome")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" i "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("range")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("//")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("len")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("br"),s._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[s._v("코드 개선\n"),n("br")])]),s._v(" "),n("p",[n("strong",[s._v("S[len(s) - 1 - i] 를 좀더 의미가 잘 드러나게 표현할수는 없을까?\nS[~i]로 표현하면된다!")]),s._v(" "),n("br")]),s._v(" "),n("p",[s._v("추가로 설명을 하자면,")]),s._v(" "),n("p",[s._v("i 가 0 이라면 ~i 는 -1 이 된다. S[-1] 은 끝에서 첫번째 문자를 의미하므로 S[len(s) -1 -0] 과 동일한 문자이다.")]),s._v(" "),n("p",[s._v("i가 1 이라면 ~i 는 -2 가 되고, S[-2] 는 끝에서 두번째 문자를 의미하므로 S[len(s) - 1 -1] 와 동일한 문자이다")]),s._v(" "),n("p",[s._v("...")]),s._v(" "),n("div",{staticClass:"language-python line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if s[i] != s[len(s)-1-i] 를 아래 코드로 개선  ")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),s._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("br"),s._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[s._v("코드를 더 깔끔하게 만들어보자\n"),n("br")])]),s._v(" "),n("p",[s._v("S를 역순으로 만든 문자열과 S 가 같다면 회문이라는 정의를 그대로 구현하면 아래 코드와 같다.")]),s._v(" "),n("p",[s._v("이전 코드보다 코드가 간결하고 의미가 명확하게 드러난다. 속도는 오히려 더 빨라지는것을 볼수있었다.")]),s._v(" "),n("p",[s._v("(BOJ Python3 제출: 252ms -> 148ms)")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def is_palindrome(s):\n    return s[::-1] == s\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("h2",{attrs:{id:"_2-유사-회문인지-검사하는-로직"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2-유사-회문인지-검사하는-로직"}},[s._v("#")]),s._v(" 2. 유사 회문인지 검사하는 로직")]),s._v(" "),n("p",[s._v("정의를 다시 읽어보자.")]),s._v(" "),n("p",[s._v("S 에서 문자 하나를 제거했을때, 그 문자열이 회문이라면 S 는 유사 회문이라고 볼수있다.")]),s._v(" "),n("p",[s._v("예제를 통해 규칙을 찾아보자.")]),s._v(" "),n("p",[s._v("s='xabba' , 첫번째 위치에서 제거 -> s='abba' (True)")]),s._v(" "),n("p",[s._v("s='abbax' , 마지막 위치에서 제거 -> s='abba' (True)")]),s._v(" "),n("p",[s._v("s='summuus', 네번째 위치('u) 에서 제거 -> s='summus' (True)")]),s._v(" "),n("p",[s._v("s='xabbay' -> (False)\n"),n("br")]),s._v(" "),n("p",[s._v("제거되는 위치는 첫번째위치거나 마지막위치거나 문자열 어딘가의 위치임을 알수있다. 이제 문자열 어딘가의 위치라는 것을 구체화 해보자.")]),s._v(" "),n("p",[s._v("예제에서 'summuus' 를 봤을때 첫번째 문자('s') 를 제거할 필요가 없다는 것을 직관적으로 알수있다.")]),s._v(" "),n("p",[s._v("왜냐하면 첫번째 문자('s') 는 반대편 문자('s')와 같기때문이다.")]),s._v(" "),n("p",[s._v("s 에서 첫번째 문자와 반대편 문자는 검사 대상에서 제외된다. 두번째 문자('u') 도 마찬가지 논리가 적용된다.\n"),n("br")]),s._v(" "),n("p",[s._v("즉 S 의 범위를 좁혀나가면서 유사 팰린드롬을 구할수있다.")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("def is_pseudo_pal(a):\n    if len(a) == 2:\n        return True\n    \n    # 첫글자 또는 끝글자를 제거해서 팰린드롬인지 \n    if is_palindrome(a[1:]) or is_palindrome(a[:-1]):\n        return True\n\n    # 첫글자와 끝글자가 다르면서 유사 팰린드롬이 되기위해서는\n    # 첫글자 또는 끝글자를 제거해서 팰린드롬이 되는 방법밖에 없다.\n    if a[0] != a[-1]:\n        return False\n    \n    # 반대편 문자와 다른 문자를 찾는다. \n    diff_i = 1\n    for i in range(1,len(a)//2):\n        if a[i] != a[~i]:\n            diff_i = i\n            break\n\t\n    # ex, a='summuus'이라면, diff_i=2, a[2:~2+1]='mmu'\n    return is_pseudo_pal(a[diff_i:~diff_i+1])\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br")])]),n("h2",{attrs:{id:"전체-소스코드"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#전체-소스코드"}},[s._v("#")]),s._v(" 전체 소스코드")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("import sys\ninput = sys.stdin.readline\n\ndef is_palindrome(a):\n    return a[::-1] == a\n\ndef is_pseudo_pal(a):\n    if len(a) == 2:\n        return True\n\n    if is_palindrome(a[1:]) or is_palindrome(a[:-1]):\n        return True\n\n    if a[0] != a[-1]:\n        return False\n    diff_i = 1\n    for i in range(1,len(a)//2):\n        if a[i] != a[~i]:\n            diff_i = i\n            break\n\n    return is_pseudo_pal(a[diff_i:~diff_i+1])\n\nT = int(input())\nfor _ in range(T):\n    s = input().rstrip()\n    ans = 2\n    if is_palindrome(s):\n        ans = 0\n    elif is_pseudo_pal(s):\n        ans = 1\n    print(ans)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);